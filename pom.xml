<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.darkenedfusion</groupId>
    <artifactId>PhoenixNetwork</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- The Java version used to compile the plugin. I suggest to use 1.8 because many servers are still using Java 8. -->
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <!-- In the following section you can define dependencies for your plugin. -->
    <!-- Right now, we only need the Spigot API -->
    <dependencies>
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>1.17.1-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>de.jeff_media</groupId>
            <artifactId>JeffLib</artifactId>
            <version>7.8.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    <!-- Here we tell maven where it should look for the defined dependencies. -->
    <!-- Right now, we only need the Spigot repository because we don't have other dependencies -->
    <repositories>
        <repository>
            <id>spigot-snapshots</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>jeff-media-public</id>
            <url>https://hub.jeff-media.com/nexus/repository/jeff-media-public/</url>
        </repository>
    </repositories>
    <build>
        <resources>
            <!-- This tells Maven that it should "filter" all files in the resource directory. More on that later. -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <outputDirectory>C:\Users\tyman\Desktop\1.18.2 Server\plugins</outputDirectory>
                    <finalName>PhoenixNetwork</finalName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    
</project>